import {Facility, FacilityType, ICAO} from "@microsoft/msfs-sdk";

export const STATEMAP: { [key: string]: string } = {
    Alaska: "AK",
    Alabama: "AL",
    Arkansas: "AR",
    Arizona: "AZ",

    California: "CA",
    Colorado: "CO",
    Connecticut: "CT",
    "District of Columbia": "DC",
    Delaware: "DE",
    Florida: "FL",
    Georgia: "GA",
    Iowa: "IA",
    Idaho: "ID",
    Illinois: "IL",
    Indiana: "IN",
    Kansas: "KS",
    Kentucky: "KY",
    Louisiana: "LA",
    Massachusetts: "MA",
    Maryland: "MD",
    Maine: "ME",
    Michigan: "MI",
    Minnesota: "MN",
    Missouri: "MO",
    Mississippi: "MS",
    Montana: "MT",
    "North Carolina": "NC",
    "North Dakota": "ND",
    Nebraska: "NE",
    "New Hampshire": "NH",
    "New Jersey": "NJ",
    "New Mexico": "NM",
    Nevada: "NV",
    "New York": "NY",
    Ohio: "OH",
    Oklahoma: "OK",
    Oregon: "OR",
    Pennsylvania: "PA",
    "Rhode Island": "RI",
    "South Carolina": "SC",
    "South Dakota": "SD",
    Tennessee: "TN",
    Texas: "TX",
    Utah: "UT",
    Virginia: "VA",
    Vermont: "VT",
    Washington: "WA",
    Wisconsin: "WI",
    "West Virginia": "WV",
    Wyoming: "WY",

    Alberta: "AB",
    "British Columbia": "BC",
    Manitoba: "MB",
    "New Brunswick": "NB",
    Newfoundland: "NF",
    "Nova Scotia": "NS",
    "Northwest Territory": "NW",
    Ontario: "ON",
    "Prince Edward Island": "PE",
    Quebec: "PQ",
    Saskatchewan: "SK",
    Yukon: "YK",
};

export const COUNTRYMAP: { [key: string]: string } = {
    'AG': 'SLB',
    'AN': 'NRU',
    'AY': 'PNG',
    'BG': 'GRL',
    'BI': 'ISL',
    //'BK': '',
    'CY': 'CAN',
    'DA': 'DZA',
    'DB': 'BEN',
    'DF': 'BFA',
    'DG': 'GHA',
    'DI': 'CIV',
    'DN': 'NGA',
    'DR': 'NER',
    'DT': 'TUN',
    'DX': 'TGO',
    'EB': 'BEL',
    'ED': 'DEU',
    'EE': 'XJ4',
    'EF': 'FIN',
    'EG': 'GBR',
    'EH': 'NLD',
    'EI': 'IRL',
    'EK': 'DNK',
    'EL': 'LUX',
    'EN': 'NOR',
    'EP': 'POL',
    'ES': 'SWE',
    'ET': 'DEU',
    'EV': 'LAT',
    'EY': 'XJ5',
    'FA': 'ZAF',
    'FB': 'BWA',
    'FC': 'COG',
    'FD': 'SWZ',
    'FE': 'CAF',
    'FG': 'GNQ',
    'FH': 'SHN',
    'FI': 'MUS',
    'FJ': 'IOT',
    'FK': 'CMR',
    'FL': 'ZAM',
    'FM': 'MDG',
    'FN': 'AGO',
    'FO': 'GAB',
    'FP': 'STP',
    'FQ': 'MOZ',
    'FS': 'SYC',
    'FT': 'TCD',
    'FV': 'ZWE',
    'FW': 'MWI',
    'FX': 'LSO',
    'FY': 'NAM',
    'FZ': 'COD',
    'GA': 'MLI',
    'GB': 'GMB',
    'GC': 'CNR',
    'GE': 'MEL',
    'GF': 'SLE',
    'GG': 'GNB',
    'GL': 'LBR',
    'GM': 'MAR',
    'GO': 'SEN',
    'GQ': 'MRT',
    'GS': 'ESH',
    'GU': 'GIN',
    'GV': 'GPV',
    'HA': 'ETH',
    'HB': 'BDI',
    'HD': 'DJI',
    'HE': 'EGY',
    'HH': 'ERI',
    'HK': 'KEN',
    'HL': 'LBY',
    'HR': 'RWA',
    'HS': 'SDN',
    'HT': 'TZA',
    'HU': 'UGA',
    'K1': 'USA',
    'K2': 'USA',
    'K3': 'USA',
    'K4': 'USA',
    'K5': 'USA',
    'K6': 'USA',
    'K7': 'USA',
    'LA': 'ALB',
    'LB': 'BGR',
    'LC': 'CYP',
    'LD': 'CRO',
    'LE': 'ESP',
    'LF': 'FRA',
    'LG': 'GRC',
    'LH': 'HUN',
    'LI': 'ITA',
    'LJ': 'SLO',
    'LK': 'CZE',
    'LL': 'ISR',
    'LM': 'MLT',
    'LO': 'AUT',
    'LP': 'PRT',
    'LQ': 'BOS',
    'LR': 'ROM',
    'LS': 'CHE',
    'LT': 'TUR',
    'LU': 'MOL',
    'LV': 'PSE',
    'LW': 'MKD',
    'LX': 'GIB',
    'LY': 'SCG',
    'LZ': 'SVK',
    'MB': 'TCA',
    'MD': 'DOM',
    'MG': 'GTM',
    'MH': 'HND',
    'MK': 'JAM',
    'MM': 'MEX',
    'MN': 'NIC',
    'MP': 'PAN',
    'MR': 'CRI',
    'MS': 'SLV',
    'MT': 'HTI',
    'MU': 'CUB',
    'MW': 'CYM',
    'MY': 'BHS',
    'MZ': 'BLZ',
    'NC': 'COK',
    'NF': 'FJI',
    'NG': 'KIR',
    'NI': 'NIU',
    'NL': 'WLF',
    'NS': 'ASM',
    'NT': 'PYF',
    'NV': 'VUT',
    'NW': 'NCL',
    'NZ': 'NZL',
    'OA': 'AFG',
    'OB': 'BHR',
    'OE': 'SAU',
    'OI': 'IRN',
    'OJ': 'JOR',
    'OK': 'KWT',
    'OL': 'LBN',
    'OM': 'ARE',
    'OO': 'OMN',
    'OP': 'PAK',
    'OR': 'IRQ',
    'OS': 'SYR',
    'OT': 'QAT',
    'OY': 'YEM',
    'PA': 'USA',
    'PG': 'USA',
    'PH': 'USA',
    'PJ': 'JTN',
    'PK': 'MHL',
    'PL': 'KIR',
    'PM': 'MID',
    'PO': 'USA',
    'PP': 'USA',
    'PT': 'PCI',
    'PW': 'WAK',
    'RC': 'TWN',
    'RJ': 'JPN',
    'RK': 'KOR',
    'RO': 'JPN',
    'RP': 'PHL',
    'SA': 'ARG',
    'SB': 'BRA',
    'SC': 'CHL',
    'SD': 'BRA',
    'SE': 'ECU',
    'SG': 'PRY',
    'SI': 'BRA',
    'SJ': 'BRA',
    'SK': 'COL',
    'SL': 'BOL',
    'SM': 'SUR',
    'SO': 'GUF',
    'SP': 'PER',
    'SS': 'BRA',
    'SU': 'URY',
    'SV': 'VEN',
    'SW': 'BRA',
    'SY': 'GUY',
    'TA': 'ATG',
    'TB': 'BRB',
    'TD': 'ATG',
    'TF': 'GLP',
    'TG': 'GRD',
    'TI': 'VIR',
    'TJ': 'PRI',
    'TK': 'KNA',
    'TL': 'LCA',
    'TN': 'ANT',
    'TQ': 'AIA',
    'TT': 'MSR',
    'TU': 'TTO',
    'TV': 'VGB',
    'TX': 'BER',
    'UA': 'XJ6',
    'UB': 'XJJ',
    'UC': 'XJ1',
    'UD': 'XJ2',
    'UE': 'XJR',
    'UG': 'XJ2',
    'UH': 'XJR',
    'UI': 'XJR',
    'UK': 'XJ3',
    'UL': 'XJR',
    'UM': 'XJ5',
    'UN': 'XJR',
    'UO': 'XJR',
    'UR': 'XJ6',
    'US': 'XJR',
    'UT': 'XJ7',
    'UU': 'XJR',
    'UW': 'XJR',
    'VA': 'IND',
    'VC': 'LKA',
    'VD': 'KHM',
    'VE': 'IND',
    'VG': 'BGD',
    'VH': 'HKG',
    'VI': 'IND',
    'VL': 'LAO',
    'VM': 'MAC',
    'VN': 'NPL',
    'VO': 'IND',
    'VR': 'MDV',
    'VT': 'THA',
    'VV': 'VNM',
    'VY': 'MYR',
    'WA': 'IDN',
    'WB': 'BRN',
    'WI': 'IDN',
    'WM': 'MYS',
    'WR': 'IDN',
    'WS': 'SGP',
    'YB': 'AUS',
    'YM': 'AUS',
    'ZB': 'CHN',
    'ZG': 'CHN',
    'ZH': 'CHN',
    'ZK': 'PRK',
    'ZL': 'CHN',
    'ZM': 'MNG',
    'ZP': 'CHN',
    'ZS': 'CHN',
    'ZU': 'CHN',
    'ZW': 'CHN',
    'ZY': 'CHN',
};

export function getRegionOrCountry(facility: Facility) {
    const cityParts = facility.city.split(", ");
    if (cityParts.length >= 2) {
        const state = Utils.Translate(cityParts[1]);
        if (STATEMAP.hasOwnProperty(state)) {
            return STATEMAP[state];
        }

    }
    return getCountry(facility);
}

export function getCountry(facility: Facility) {
    let region = facility.region;
    if (ICAO.getFacilityTypeFromValue(facility.icaoStruct) === FacilityType.Airport) {
        region = facility.icaoStruct.ident.substring(0, 2);
    }

    return COUNTRYMAP.hasOwnProperty(region) ? COUNTRYMAP[region] : "   ";
}